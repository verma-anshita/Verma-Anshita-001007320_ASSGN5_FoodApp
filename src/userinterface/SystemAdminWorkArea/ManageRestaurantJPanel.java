/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.CityNetwork;
import Business.DeliveryMan.DeliveryMan;
import Business.EcoSystem;
import Business.Employee.RestaurantEmployee;
import Business.Restaurant.Restaurant;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author anshitaverma
 */
public class ManageRestaurantJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageRestaurantJPanel
     */
    
    private JPanel userProcessContainer;
    private UserAccount userLogged;
    private EcoSystem ecoSystem;
    private CityNetwork cityNetwork;
    
    public ManageRestaurantJPanel(JPanel jpanel, UserAccount userLogged, EcoSystem ecoSystem, CityNetwork cityNetwork) {
        this.ecoSystem=ecoSystem;
        this.userLogged=userLogged;
        this.userProcessContainer=jpanel;
        this.cityNetwork=cityNetwork;
        initComponents();
        populateRestaurants();
    }
    
    public void populateRestaurants() {
        
        DefaultTableModel model = (DefaultTableModel) tblRestaurantsList.getModel();
        model.setRowCount(0);
        int count=0;
        for(Restaurant restaurant:cityNetwork.getRestaurantDirectory().getRestaurants()) {
            
            count++;
            Object[] row = new Object[5];
            row[0]=count;
            row[1]=restaurant;
            row[2]=restaurant.getAddress();
            row[3]=restaurant.getPhoneNo();
            row[4]=restaurant.getEmail();
            
            model.addRow(row);
        }
        
        DefaultTableModel managersModel = (DefaultTableModel) tblRestaurantManagersJtable.getModel();
        managersModel.setRowCount(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        btnDelete = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        backButtonjButton = new javax.swing.JButton();
        headerjLabel = new javax.swing.JLabel();
        restaurantsjLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRestaurantsList = new javax.swing.JTable();
        btnManageRestaurant = new javax.swing.JButton();
        headerManagersjLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRestaurantManagersJtable = new javax.swing.JTable();
        btnUpdateManagers = new javax.swing.JButton();
        btnDeleteManagers = new javax.swing.JButton();
        btnCreateManagers = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 102, 102));

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnCreate.setText("Create >");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        backButtonjButton.setText("< < Back");
        backButtonjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonjButtonActionPerformed(evt);
            }
        });

        headerjLabel.setFont(new java.awt.Font("Lucida Grande", 3, 18)); // NOI18N
        headerjLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerjLabel.setText("Manage Restaurants");

        restaurantsjLabel.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        restaurantsjLabel.setText("Restaurants List");

        tblRestaurantsList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Restaurant Name", "Address", "MobileNo", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblRestaurantsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRestaurantsListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblRestaurantsList);
        if (tblRestaurantsList.getColumnModel().getColumnCount() > 0) {
            tblRestaurantsList.getColumnModel().getColumn(0).setPreferredWidth(5);
        }

        btnManageRestaurant.setText("Manage Restaurant Managers");
        btnManageRestaurant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageRestaurantActionPerformed(evt);
            }
        });

        headerManagersjLabel.setFont(new java.awt.Font("Lucida Grande", 3, 18)); // NOI18N
        headerManagersjLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerManagersjLabel.setText("Manage Restaurant Managers");

        tblRestaurantManagersJtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S-No", "Manager Name", "UserName", "Password", "Phone No", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblRestaurantManagersJtable);
        if (tblRestaurantManagersJtable.getColumnModel().getColumnCount() > 0) {
            tblRestaurantManagersJtable.getColumnModel().getColumn(0).setPreferredWidth(5);
        }

        btnUpdateManagers.setText("Update");
        btnUpdateManagers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateManagersActionPerformed(evt);
            }
        });

        btnDeleteManagers.setText("Delete");
        btnDeleteManagers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteManagersActionPerformed(evt);
            }
        });

        btnCreateManagers.setText("Create >");
        btnCreateManagers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateManagersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(restaurantsjLabel)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnManageRestaurant)
                                                .addGap(153, 153, 153)
                                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(backButtonjButton)
                                        .addGap(24, 24, 24)
                                        .addComponent(btnUpdateManagers, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(12, 12, 12)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnDeleteManagers, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnCreateManagers, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(headerjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(headerManagersjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(118, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(headerjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(restaurantsjLabel)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnManageRestaurant, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(headerManagersjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteManagers, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCreateManagers, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdateManagers, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backButtonjButton))
                .addContainerGap(41, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRestaurantsList.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        } else {
            Restaurant selectedRestaurant = (Restaurant) tblRestaurantsList.getValueAt(selectedRow, 1);
            cityNetwork.getRestaurantDirectory().getRestaurants().remove(selectedRestaurant);
            JOptionPane.showMessageDialog(null, "Restaurant deleted successfully");

            populateRestaurants();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        CreateNewRestaurantJPanel panel = new CreateNewRestaurantJPanel(userProcessContainer, userLogged,cityNetwork);
        //          userProcessContainer.remove(this);
        userProcessContainer.add("CreateNewRestaurantJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRestaurantsList.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        } else {
            Restaurant selectedRestaurant = (Restaurant) tblRestaurantsList.getValueAt(selectedRow, 1);
            UpdateRestaurantJPanel updateRestaurantJPanel = new UpdateRestaurantJPanel(userProcessContainer, selectedRestaurant, userLogged);
            userProcessContainer.add("UpdateRestaurantPanel", updateRestaurantJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void backButtonjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonjButtonActionPerformed
        // TODO add your handling code here:

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonjButtonActionPerformed

    private void btnManageRestaurantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageRestaurantActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRestaurantsList.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        } else {
            Restaurant selectedRestaurant = (Restaurant) tblRestaurantsList.getValueAt(selectedRow, 1);
            DefaultTableModel managersModel = (DefaultTableModel) tblRestaurantManagersJtable.getModel();
            managersModel.setRowCount(0);
            int employeeCount=0;
            for(RestaurantEmployee restaurantEmployee:selectedRestaurant.getRestaurantEmployeeDirectory().getEmployeeList()) {
                employeeCount++;
                Object[] row = new Object[6];
                row[0] = employeeCount;
                row[1] = restaurantEmployee;
                row[2] = restaurantEmployee.getUserName();
                row[3] = restaurantEmployee.getPassword();
                row[4] = restaurantEmployee.getPhoneNo();
                row[5] = restaurantEmployee.getEmail();
                
                managersModel.addRow(row);
            }
        }
    }//GEN-LAST:event_btnManageRestaurantActionPerformed

    private void btnUpdateManagersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateManagersActionPerformed
        // TODO add your handling code here:
        int selectedManager = tblRestaurantManagersJtable.getSelectedRow();
        if(selectedManager < 0) {
            JOptionPane.showMessageDialog(this, "Please select a manager to Update");
            return;
        }
        DefaultTableModel restaurantManagerModel = (DefaultTableModel) tblRestaurantManagersJtable.getModel();
        RestaurantEmployee restaurantEmployee = (RestaurantEmployee) restaurantManagerModel.getValueAt(selectedManager, 1);
        
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("UpdateRestaurantsManagersPanel", new UpdateRestaurantManagerJPanel(userProcessContainer,userLogged, restaurantEmployee));
        cardLayout.next(userProcessContainer);
        
    }//GEN-LAST:event_btnUpdateManagersActionPerformed

    private void btnDeleteManagersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteManagersActionPerformed
        // TODO add your handling code here:
        int selectedManager = tblRestaurantManagersJtable.getSelectedRow();
        if(selectedManager < 0) {
            JOptionPane.showMessageDialog(this, "Please select a manager to delete");
            return;
        }
        DefaultTableModel restaurantManagerModel = (DefaultTableModel) tblRestaurantManagersJtable.getModel();
        RestaurantEmployee restaurantEmployee = (RestaurantEmployee) restaurantManagerModel.getValueAt(selectedManager, 1);
        
        int selectedRow = tblRestaurantsList.getSelectedRow();
        DefaultTableModel restaruntsManagersModel = (DefaultTableModel) tblRestaurantsList.getModel();
        Restaurant selectedRestaurant = (Restaurant) restaruntsManagersModel.getValueAt(selectedRow, 1);
        selectedRestaurant.getRestaurantEmployeeDirectory().getEmployeeList().remove(restaurantEmployee);
        JOptionPane.showMessageDialog(this, "Successfully deleted Manager");
        populateRestaurants();
    }//GEN-LAST:event_btnDeleteManagersActionPerformed

    private void btnCreateManagersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateManagersActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRestaurantsList.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Restaurant to add Managers");
            return;
        } else {
            DefaultTableModel restaruntsModel = (DefaultTableModel) tblRestaurantsList.getModel();
            Restaurant selectedRestaurant = (Restaurant) restaruntsModel.getValueAt(selectedRow, 1);
            CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
            userProcessContainer.add("CreateMnagerPanel", new CreateRestaurantManagerJPanel(userProcessContainer, selectedRestaurant, userLogged));
            cardLayout.next(userProcessContainer);
            
        }
    }//GEN-LAST:event_btnCreateManagersActionPerformed

    private void tblRestaurantsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRestaurantsListMouseClicked
        // TODO add your handling code here:
        btnManageRestaurantActionPerformed(null);
    }//GEN-LAST:event_tblRestaurantsListMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButtonjButton;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnCreateManagers;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDeleteManagers;
    private javax.swing.JButton btnManageRestaurant;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdateManagers;
    private javax.swing.JLabel headerManagersjLabel;
    private javax.swing.JLabel headerjLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JLabel restaurantsjLabel;
    private javax.swing.JTable tblRestaurantManagersJtable;
    private javax.swing.JTable tblRestaurantsList;
    // End of variables declaration//GEN-END:variables
}
